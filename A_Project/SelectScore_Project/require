要求带有操作界面：
  1：学员视图
     1)注册
     2)交学费
     3)选择班级
  2：讲师视图
     1)管理班级
     2)上课选择班级
     3)查看班级学员列表
     4)修改管理学生成绩
  1：管理视图
     1)创建讲师
     2)创建班级
     3)创建课程


分析：
    界面可能使用控制台，也可能使用web等等
    1.识别对象：界面视图类，逻辑控制类，数据模型类
    2.分配职责
        界面视图类：负责处理界面逻辑，比如显示菜单，获取输入，显示结果等
        逻辑控制类：负责存储学生信息，处理业务逻辑，比如添加、删除等
        数据模型类：定义需要处理的数据类型。比如学生信息

设计
    1：数据模型类  StudentModel
         数据：编号id(自动生成)  姓名name   年龄age  成绩 score ---->用属性进行保护
    2：逻辑控制类  StudentManagerController
        数据：学生列表  __stu_list
        行为：获取列表只读  stu_list
             添加学生方法  add_student
             删除学生   remove_student
             修改学生  update_student
             根据成绩排序   order_by_score

    3：界面视图类  StudentManagerView
        数据：逻辑控制对象  __manager =  StudentManagerController()
        行为：显示菜单   __display_menu ,
             选择菜单项 __select_menu
             输入学生  __input_students
             输出学生  __output_students
             删除学生  __delete_students
             修改学生信息  __modify_student
             按成绩输出学生   __output_student_by_score




角色:学校、学员、课程、讲师
要求:
1. 创建北京、上海 2 所学校
2. 创建linux , python , go 3个课程 ， linux\py 在北京开， go 在上海开
3. 课程包含，周期，价格，通过学校创建课程
4. 通过学校创建班级， 班级关联课程、讲师
5. 创建学员时，选择学校，关联班级
5. 创建讲师角色时要关联学校，
6. 提供两个角色接口
6.1 学员视图， 可以注册， 交学费， 选择班级，
6.2 讲师视图， 讲师可管理自己的班级， 上课时选择班级， 查看班级学员列表 ， 修改所管理的学员的成绩
6.3 管理视图，创建讲师， 创建班级，创建课程
7. 上面的操作产生的数据都通过pickle序列化保存到文件里































